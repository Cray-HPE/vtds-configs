# A proof-of-concept sample core-configuration sample building a vTDS
# system using a GCP provider layer, an Platform layer designed to run
# on Ubuntu based Virtual Blades and hosting Virtual Nodes using `kvm`
# and setting up virtual networks using `VxLAN`, a cluster layer
# designed for `kvm` Virtual Nodes and a simple Ubuntu Cluster as the
# application.  Copy this file and modify or overlay it as desired to
# set up the core configuration for your vTDS system
# This file contains the base configuration (defaults) for the vTDS
# core driver. It is what will be returned from the get_base_config()
# and get_base_config_text() calls into the vtds-core configuration
# API.
core:
  layers:
    base:
      package: vtds-base
      module: vtds_base
      source_type: pypi
      metadata:
        url: "https://artifactory.algol60.net/artifactory/csm-python-modules/simple"
        version: null
    core:
      package: vtds-core
      module: vtds_core
      metadata:
        url: "https://artifactory.algol60.net/artifactory/csm-python-modules/simple"
        version: null
    provider:
      package: vtds-provider-gcp
      module: vtds_provider_gcp
      source_type: pypi
      metadata:
        url: "https://artifactory.algol60.net/artifactory/csm-python-modules/simple"
        version: null
    platform:
      package: vtds-platform-ubuntu
      module: vtds_platform_ubuntu
      source_type: pypi
      metadata:
        url: "https://artifactory.algol60.net/artifactory/csm-python-modules/simple"
        version: null
    cluster:
      package: vtds-cluster-kvm
      module: vtds_cluster_kvm
      source_type: pypi
      metadata:
        url: "https://artifactory.algol60.net/artifactory/csm-python-modules/simple"
        version: null
    application:
      package: vtds-application-ubuntu
      module: vtds_application_ubuntu
      source_type: pypi
      metadata:
        url: "https://artifactory.algol60.net/artifactory/csm-python-modules/simple"
        version: null
  configurations:
  - type: git
    metadata:
      # This brings in the HPE specific settings needed to build an HPE
      # project on GCP.
      repo: git@github.hpe.com:eric-lund/vtds-configs.git
      version: main
      path: layers/provider/gcp/provider-gcp-hpe-org.yaml
  - type: git
    metadata:
      # This brings in the POC configuration for the provider layer.
      repo: git@github.hpe.com:eric-lund/vtds-configs.git
      version: main
      path: layers/provider/gcp/provider-gcp-poc.yaml
  - type: git
    metadata:
      # This brings in the POC configuration for the platform layer.
      repo: git@github.hpe.com:eric-lund/vtds-configs.git
      version: main
      path: layers/platform/ubuntu/platform-ubuntu-poc.yaml
  - type: git
    metadata:
      # This brings in the POC configuration for the cluster layer.
      repo: git@github.hpe.com:eric-lund/vtds-configs.git
      version: main
      path: layers/cluster/kvm/cluster-kvm-poc.yaml
  - type: git
    metadata:
      # This brings in the POC configuration for the application layer.
      repo: git@github.hpe.com:eric-lund/vtds-configs.git
      version: main
      path: layers/application/ubuntu/application-ubuntu-poc.yaml
  - type: command-line
    # Bring in any configuration files / sources listed on the command
    # line and merge them on top of what has been listed here. This
    # overlay will override matching settings in the above sources.
    metadata: {}
  - type: core-config
    # If there is anything outside the 'core' section of the Core
    # Configuration apply it last to override anything seen up to this
    # point.
    metadata: {}
